input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/${JDBC_DRIVER_FILENAME}"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://${RDS_ENDPOINT}:3306/${RDS_DATABASE}"
    jdbc_default_timezone => "${TZ}"
    jdbc_user => "${RDS_USERNAME}"
    jdbc_password => "${RDS_PASSWORD}"
    jdbc_paging_enabled => true
    tracking_column => "updated_at"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* */5 * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated_at) AS unix_ts_in_secs FROM real_estates WHERE (UNIX_TIMESTAMP(updated_at) > :sql_last_value AND updated_at < NOW()) ORDER BY updated_at ASC"
    tags => ["real_estates"]
  }
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/${JDBC_DRIVER_FILENAME}"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://${RDS_ENDPOINT}:3306/${RDS_DATABASE}"
    jdbc_default_timezone => "${TZ}"
    jdbc_user => "${RDS_USERNAME}"
    jdbc_password => "${RDS_PASSWORD}"
    jdbc_paging_enabled => true
    tracking_column => "updated_at"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* */5 * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated_at) AS unix_ts_in_secs FROM real_estate_geos WHERE (UNIX_TIMESTAMP(updated_at) > :sql_last_value AND updated_at < NOW()) ORDER BY updated_at ASC"
    tags => ["real_estate_geos"]
  }
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/${JDBC_DRIVER_FILENAME}"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://${RDS_ENDPOINT}:3306/${RDS_DATABASE}"
    jdbc_default_timezone => "${TZ}"
    jdbc_user => "${RDS_USERNAME}"
    jdbc_password => "${RDS_PASSWORD}"
    jdbc_paging_enabled => true
    tracking_column => "updated_at"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* */5 * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(image_updated_at) AS unix_ts_in_secs FROM real_estate_images WHERE (UNIX_TIMESTAMP(image_updated_at) > :sql_last_value AND image_updated_at < NOW()) ORDER BY image_updated_at ASC"
    tags => ["real_estate_images"]
  }
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/${JDBC_DRIVER_FILENAME}"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://${RDS_ENDPOINT}:3306/${RDS_DATABASE}"
    jdbc_default_timezone => "${TZ}"
    jdbc_user => "${RDS_USERNAME}"
    jdbc_password => "${RDS_PASSWORD}"
    jdbc_paging_enabled => true
    tracking_column => "updated_at"
    use_column_value => true
    tracking_column_type => "numeric"
    schedule => "* */5 * * * *"
    statement => "SELECT *, UNIX_TIMESTAMP(updated_at) AS unix_ts_in_secs FROM tag_estates WHERE (UNIX_TIMESTAMP(updated_at) > :sql_last_value AND updated_at < NOW()) ORDER BY updated_at ASC"
    tags => ["tag_estates"]
  }
}

filter {
  if "real_estates" in [tags] {
    mutate {
      copy => {"meta_id" => "[@metadata][_id]"}
      remove_field => ["meta_id", "@version", "unix_ts_in_secs"]
    }
  } else if "real_estate_images" in [tags] {
    mutate {
      copy => {"meta_id" => "[@metadata][_id]"}
      remove_field => ["meta_id", "@version", "unix_ts_in_secs"]
    }
  } else if "real_estate_geos" in [tags] {
    mutate {
      copy => {"meta_real_estate_id" => "[@metadata][_real_estate_id]"}
      remove_field => ["meta_real_estate_id", "@version", "unix_ts_in_secs"]
    }
  } else if "tag_estates" in [tags] {
    mutate {
      copy => {"meta_id" => "[@metadata][_id]"}
      remove_field => ["meta_id", "@version", "unix_ts_in_secs"]
    }
  }
}

output {
  if "real_estates" in [tags] {
    elasticsearch {
      hosts => "${ES_ENDPOINT}:443"
      ssl => true
      ilm_enabled => false
      index => "real_estates"
      document_id => "%{id}"
    }
  } else if "real_estate_images" in [tags] {
    elasticsearch {
      hosts => "${ES_ENDPOINT}:443"
      ssl => true
      ilm_enabled => false
      index => "real_estate_images"
      document_id => "%{id}"
    }
  } else if "real_estate_geos" in [tags] {
    elasticsearch {
      hosts => "${ES_ENDPOINT}:443"
      ssl => true
      ilm_enabled => false
      index => "real_estate_geos"
      document_id => "%{real_estate_id}"
    }
  } else if "tag_estates" in [tags] {
    elasticsearch {
      hosts => "${ES_ENDPOINT}:443"
      ssl => true
      ilm_enabled => false
      index => "tag_estates"
      document_id => "%{id}"
    }
  } 
}